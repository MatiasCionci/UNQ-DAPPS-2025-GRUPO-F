spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT config
app.security.jwt.secret-key=${JWT_SECRET}
app.security.expiration-time=86400000
gemini.api.key=${GEMINI_API_KEY}
FOOTBALL_API_KEY=${FOTBALL_API_KEY}
FOOTBALL_API_URL=${FOTBALL_API_URL}
# Spring Config
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
management.endpoints.web.exposure.include=prometheus,health,info

# Habilitar el endpoint de Prometheus (generalmente es true por defecto si micrometer-registry-prometheus está en el classpath)
management.endpoint.prometheus.enabled=true

spring.cache.type=redis
spring.data.redis.host=localhost 
spring.data.redis.port=6379
# spring.redis.password=tu_contraseña # Si tu Redis tiene contraseña

# Opcional: Configurar TTL por defecto para los cachés (en milisegundos)
spring.cache.redis.time-to-live=3600s